"""Initial migrate.

Revision ID: 767e83430a44
Revises: 
Create Date: 2025-08-24 01:02:39.789449

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '767e83430a44'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groupTimes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('day', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schoolLevels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('schoolYears',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('testTypes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('firstName', sa.String(), nullable=False),
    sa.Column('lastName', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('key', sa.LargeBinary(), nullable=False),
    sa.Column('salt', sa.LargeBinary(), nullable=False),
    sa.Column('student', sa.Boolean(), nullable=False),
    sa.Column('parent', sa.Boolean(), nullable=False),
    sa.Column('tutor', sa.Boolean(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('schoolID', sa.Integer(), nullable=True),
    sa.Column('levelID', sa.Integer(), nullable=True),
    sa.Column('yearID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['levelID'], ['schoolLevels.id'], ),
    sa.ForeignKeyConstraint(['schoolID'], ['schools.id'], ),
    sa.ForeignKeyConstraint(['yearID'], ['schoolYears.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('studentID', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['studentID'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('families',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parentID', sa.Integer(), nullable=False),
    sa.Column('studentID', sa.Integer(), nullable=False),
    sa.Column('pending', sa.Boolean(), nullable=True),
    sa.Column('studentSubmit', sa.Boolean(), nullable=True),
    sa.Column('parentSubmit', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['parentID'], ['users.id'], ),
    sa.ForeignKeyConstraint(['studentID'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('studentGroups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('groupID', sa.Integer(), nullable=False),
    sa.Column('studentID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['groupID'], ['groupTimes.id'], ),
    sa.ForeignKeyConstraint(['studentID'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('typeMeans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('studentID', sa.Integer(), nullable=False),
    sa.Column('typeID', sa.Integer(), nullable=False),
    sa.Column('mean', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['studentID'], ['users.id'], ),
    sa.ForeignKeyConstraint(['typeID'], ['testTypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('courseID', sa.Integer(), nullable=False),
    sa.Column('grade', sa.Float(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('typeID', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('dateUpdate', sa.DateTime(timezone=True), nullable=False),
    sa.Column('dateTest', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['courseID'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['typeID'], ['testTypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('courseMeans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gradeID', sa.Integer(), nullable=False),
    sa.Column('courseID', sa.Integer(), nullable=False),
    sa.Column('mean', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['courseID'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['gradeID'], ['grades.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('courseMeans')
    op.drop_table('grades')
    op.drop_table('typeMeans')
    op.drop_table('studentGroups')
    op.drop_table('families')
    op.drop_table('courses')
    op.drop_table('users')
    op.drop_table('testTypes')
    op.drop_table('schools')
    op.drop_table('schoolYears')
    op.drop_table('schoolLevels')
    op.drop_table('groupTimes')
    # ### end Alembic commands ###
